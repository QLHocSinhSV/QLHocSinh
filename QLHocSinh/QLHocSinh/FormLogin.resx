<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zcwAAAAASUVORK5CYII=
</value>
  </data>
</root>